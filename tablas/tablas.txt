
CREATE TABLE IF NOT EXISTS predios (
    id SERIAL PRIMARY KEY,
    codigo VARCHAR(20) NOT NULL UNIQUE,
    nombre VARCHAR(100) DEFAULT '',
    area_hectareas FLOAT DEFAULT 0,
    tipo_sueldo VARCHAR(30) DEFAULT '',
    capacidad_maxima INT DEFAULT 0,
    observaciones TEXT DEFAULT '',
	activo int default 1
);

CREATE TABLE IF NOT EXISTS potreros (
    id SERIAL PRIMARY KEY,
id_predio int,
    codigo VARCHAR(20) NOT NULL,
    nombre VARCHAR(100) DEFAULT '',
    area_hectareas FLOAT DEFAULT 0,
    tipo_sueldo VARCHAR(30) DEFAULT '',
    capacidad_maxima INT DEFAULT 0,
    observaciones TEXT DEFAULT '',
	activo int default 1,
	CONSTRAINT fk_predios_potreros FOREIGN KEY (id_predio) REFERENCES predios(id),
	CONSTRAINT unique_predios_potreros UNIQUE(id_predio,codigo)
);

CREATE TABLE IF NOT EXISTS sectores (
    id SERIAL PRIMARY KEY,
	id_predio int,
    codigo VARCHAR(20) NOT NULL,
    nombre VARCHAR(100) DEFAULT '',
	activo int default 1,
	CONSTRAINT fk_predios_sectores FOREIGN KEY (id_predio) REFERENCES predios(id),
	CONSTRAINT unique_predios_sectores UNIQUE(id_predio,codigo)
);

CREATE TABLE IF NOT EXISTS lotes (
    id SERIAL PRIMARY KEY,
	id_predio int,
    codigo VARCHAR(20) NOT NULL,
    nombre VARCHAR(100) DEFAULT '',
	activo int default 1,
	CONSTRAINT fk_predios_lotes FOREIGN KEY (id_predio) REFERENCES predios(id),
	CONSTRAINT unique_predios_lotes UNIQUE(id_predio,codigo)
);

CREATE TABLE IF NOT EXISTS grupos (
    id SERIAL PRIMARY KEY,
	id_predio int,
    codigo VARCHAR(20) NOT NULL,
    nombre VARCHAR(100) DEFAULT '',
	activo int default 1,
	CONSTRAINT fk_predios_grupos FOREIGN KEY (id_predio) REFERENCES predios(id),
	CONSTRAINT unique_predios_grupos UNIQUE(id_predio,codigo)
);

CREATE TABLE IF NOT EXISTS config_rangos_edades (
    id int PRIMARY KEY,
    rango1 int default 0,
    rango2 int default 0,
	nombre varchar(50) NOT NULL default '',
	sexo int NOT NULL default 0,
	activo int default 1
);

CREATE TABLE IF NOT EXISTS config_key_values (
	opcion varchar(30) NOT NULL default '',
	key varchar(50) NOT NULL default '',
	value varchar(50) NOT NULL default '',
	activo int default 1
);

CREATE TABLE IF NOT EXISTS config_razas (
    id SERIAL PRIMARY KEY,
	nombre varchar(50) NOT NULL default '',
	activo int default 1
);

CREATE TABLE IF NOT EXISTS config_diagnosticos_veterinarios (
    id SERIAL PRIMARY KEY,
	id_predio int,
	codigo VARCHAR(20) NOT NULL,
	nombre varchar(50) NOT NULL default '',
	tipo_diagnostico int not null default 0,
	comentarios text default '',
	activo int default 1,
	CONSTRAINT fk_predios_diagnosticos_veterinarios FOREIGN KEY (id_predio) REFERENCES predios(id),
	CONSTRAINT unique_predios_diagnosticos_veterinarios UNIQUE(id_predio,codigo)
);

CREATE TABLE IF NOT EXISTS config_condiciones_corporales (
    id SERIAL PRIMARY KEY,
	codigo VARCHAR(20) NOT NULL UNIQUE,
	nombre varchar(50) NOT NULL default '',
	comentarios text default '',
	activo int default 1
);

CREATE TABLE IF NOT EXISTS config_tipos_explotacion (
    id SERIAL PRIMARY KEY,
	codigo VARCHAR(20) NOT NULL UNIQUE,
	nombre varchar(50) NOT NULL default '',
	comentarios text default '',
	activo int default 1
);

CREATE TABLE IF NOT EXISTS config_calidad_animal (
    id SERIAL PRIMARY KEY,
	codigo VARCHAR(20) NOT NULL UNIQUE,
	nombre varchar(50) NOT NULL default '',
	comentarios text default '',
	activo int default 1
);

CREATE TABLE IF NOT EXISTS config_color_animal (
    id SERIAL PRIMARY KEY,
	codigo VARCHAR(20) NOT NULL UNIQUE,
	nombre varchar(50) NOT NULL default '',
	activo int default 1
);

CREATE TABLE IF NOT EXISTS config_motivos_ventas (
    id SERIAL PRIMARY KEY,
	id_predio int,
	codigo VARCHAR(20) NOT NULL,
	nombre varchar(50) NOT NULL default '',
	comentarios text default '',
	activo int default 1,
	CONSTRAINT fk_predios_motivos_ventas FOREIGN KEY (id_predio) REFERENCES predios(id),
	CONSTRAINT unique_predios_motivos_ventas UNIQUE(id_predio,codigo)
);

CREATE TABLE IF NOT EXISTS config_causas_muerte (
    id SERIAL PRIMARY KEY,
	id_predio int,
	codigo VARCHAR(20) NOT NULL,
	nombre varchar(50) NOT NULL default '',
	comentarios text default '',
	activo int default 1,
	CONSTRAINT fk_predios_causas_muerte FOREIGN KEY (id_predio) REFERENCES predios(id),
	CONSTRAINT unique_predios_causas_muerte UNIQUE(id_predio,codigo)
);

CREATE TABLE IF NOT EXISTS config_lugares_compras (
    id SERIAL PRIMARY KEY,
	id_predio int,
	codigo VARCHAR(20) NOT NULL,
	nombre varchar(50) NOT NULL default '',
	comentarios text default '',
	activo int default 1,
	CONSTRAINT fk_predios_lugares_compras FOREIGN KEY (id_predio) REFERENCES predios(id),
	CONSTRAINT unique_predios_lugares_compras UNIQUE(id_predio,codigo)
);

CREATE TABLE IF NOT EXISTS config_lugares_ventas (
    id SERIAL PRIMARY KEY,
	id_predio int,
	codigo VARCHAR(20) NOT NULL,
	nombre varchar(50) NOT NULL default '',
	comentarios text default '',
	activo int default 1,
	CONSTRAINT fk_predios_lugares_ventas FOREIGN KEY (id_predio) REFERENCES predios(id),
	CONSTRAINT unique_id_predios_lugares_ventas UNIQUE(id_predio,codigo)
);

CREATE TABLE IF NOT EXISTS config_parametros (
    id SERIAL PRIMARY KEY,
	id_predio int,
	codigo VARCHAR(20) NOT NULL,
	nombre varchar(50) NOT NULL default '',
	descripcion TEXT NOT NULL default '',
	value_int int default 0,
	value_float float default 0,
	value_date TIMESTAMP,
	activo int default 1,
	CONSTRAINT fk_predios_parametros FOREIGN KEY (id_predio) REFERENCES predios(id),
	CONSTRAINT unique_predios_parametros UNIQUE(id_predio,codigo)
);


---insertar los registros config_rangos_edades-----
DELETE FROM config_rangos_edades;
INSERT INTO config_rangos_edades (id, rango1, rango2, nombre, sexo, activo) VALUES
(1, 1, 240, 'Ternero', 0, 1),
(2, 241, 365, 'Novillo destete', 0, 1),
(3, 366, 600, 'Novillo levante', 0, 1),
(4, 601, 1080, 'Novillo Ceba', 0, 1),
(5, 1081, 10000, 'Toro', 0, 1),
(6, 1, 240, 'Ternera', 1, 1),
(7, 241, 365, 'Novilla destete', 1, 1),
(8, 366, 600, 'Novilla lavante', 1, 1),
(9, 601, 1080, 'Novilla vientre', 1, 1),
(10, 1081, 10000, 'Vaca', 1, 1);

---insertar los registros config_key_values-----
DELETE FROM config_key_values;
INSERT INTO config_key_values (opcion,key,value,activo) VALUES
('sexo','Masculino','0',1),
('sexo','Femenino','1',1)

